<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- Transaction manager for the project -->
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>


	<!-- Datasources -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:file:database.dat;shutdown=true" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<!-- Templates -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>


	<!-- DAO Beans -->
	<bean id="bookDao"
		class="com.virtualpairprogrammers.avalon.data.BookDaoCleanerJdbcImpl"
		init-method="createTables">
		<constructor-arg ref="jdbcTemplate" />

	</bean>


	<!-- Service beans -->
	<bean id="accountsService"
		class="com.virtualpairprogrammers.avalon.services.AccountsServiceMockImpl" />


	<bean id="purchasingService"
		class="com.virtualpairprogrammers.avalon.services.PurchasingServiceImpl">

		<constructor-arg ref="bookService" />
		<constructor-arg ref="accountsService" />

	</bean>
	
	
	<bean id="bookService"
		class="com.virtualpairprogrammers.avalon.services.BookServiceProductionImpl">
		<constructor-arg ref="bookDao" />

	</bean>
	
	<!-- Timing Bean -->
	
	<bean id="performanceTimingAdvice" class="com.virtualpairprogrammers.avalon.advice.PerformanceTimingAdvice"/>
	
	
	<aop:config>
		<aop:pointcut 
		expression="execution ( java.util.List com.virtualpairprogrammers.avalon.services.*.* (..) )"
		id="allServiceMethodsThatReturnLists"
		/>
		<aop:aspect ref="performanceTimingAdvice">
			<aop:around method="performTimingMeasurement"
				pointcut-ref="allServiceMethodsThatReturnLists" />
				
				<aop:before method="beforeAdviceTesting"
				pointcut-ref="allServiceMethodsThatReturnLists"/>
				
		</aop:aspect>
	</aop:config>
	
	<aop:aspectj-autoproxy>
	</aop:aspectj-autoproxy>
	
	<!-- Transaction configuration  -->
	<tx:advice id="allMethodsToBeTransactional">
		<tx:attributes>
			<tx:method name="*"/>
			
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor advice-ref="allMethodsToBeTransactional"
		pointcut="execution ( java.util.List com.virtualpairprogrammers.avalon.services..*.* (..) )"/>
	</aop:config>
	<tx:annotation-driven/>
	


</beans>
